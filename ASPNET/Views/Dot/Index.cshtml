
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/_BasicLayout.cshtml";
}

<h2>Index</h2>

<input name="btnGetMovies" id="btnGetMovies" type="submit" value="Get Movies">
<ul id="movieList"></ul>

<div id="content"></div>
<div id="contentcustom"></div>

@section Scripts{

<script id="headertmpl" type="text/x-dot-template">
    <h1>{{=it.title}}</h1>
</script>

<script id="headertmpl" type="text/x-dot-template">
    <h1>{{=it.title}}</h1>
</script>

<script id="pagetmpl" type="text/x-dot-template">
    <h2>Here is the page using a header template</h2>
    {{#def.header}}
    {{=it.name}}
</script>

<script id="customizableheadertmpl" type="text/x-dot-template">
    {{#def.header}}
    {{#def.mycustominjectionintoheader || ''}}
</script>

<script id="pagetmplwithcustomizableheader" type="text/x-dot-template">
    <h2>Here is the page with customized header template</h2>
    {{##def.mycustominjectionintoheader:
			<div>{{=it.title}} is not {{=it.name}}</div>
    #}}
    {{#def.customheader}}
    {{=it.name}}
</script>

<script type="text/javascript">
    $("#btnGetMovies").click(function () {
        var actionUrl = '@Url.Action("Movies", "dot")';
        $.getJSON(actionUrl, displayData);
    });

    function displayData(response) {
        if (response != null) {
            for (var i = 0; i < response.length; i++) {
                $("#movieList").append("<li>" + response[i].Title + " " + response[i].Genre + " " + response[i].Year + "</li>")
            }
        }
    }

    var def = {
        header: document.getElementById('headertmpl').text,
        customheader: document.getElementById('customizableheadertmpl').text
    };
    var data = {
        title: "My title",
        name: "My name"
    };
    var pagefn = doT.template(document.getElementById('pagetmpl').text, undefined, def);
    document.getElementById('content').innerHTML = pagefn(data);
    pagefn = doT.template(document.getElementById('pagetmplwithcustomizableheader').text, undefined, def);
    document.getElementById('contentcustom').innerHTML = pagefn(data);


    function anonymous(it /**/) { var out = ''; for (var prop in it) { out += '<div>' + (prop) + '</div>'; } return out; }
</script>    
}
